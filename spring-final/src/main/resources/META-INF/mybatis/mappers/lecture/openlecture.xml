<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.jhta.dao.openlecture.OpenLectureDao">

<!-- 강의 평가 등록 테이블 조회 -->
<select id="getInformationOfProfessorList" resultType="kr.co.jhta.vo.ProfessorOpenLecture">
	select distinct
			U.U_PROF_NO 			AS no,
			U.U_PROF_ID 			AS id,
			U.U_PROF_NAME 			AS name,
			U.U_PROF_GENDER 		AS gender,
			U.U_PROF_CODE 			AS code,
			U.U_PROF_DIVISION 		AS division,
			U.U_PROF_PWD 			AS pwd,
			E.E_LECTURE_RATING 	    AS register,
			U.U_PROF_PHONE 			AS phone,
			U.U_PROF_ADDR 			AS addr,
			U.U_PROF_EMAIL 			AS email,
			U.U_PROF_GRADE 			AS grade,
			U.U_PROF_SSN 			AS ssn,
			U.U_PROF_FOREI 			AS forei,
			U.U_PROF_ENTRYDATE 		AS entrydate,
			U.U_PROF_LEAVEDATE 		AS leavedate,
			J.J_NO					AS subjectNo,
			J.J_SUBJECT_NAME    	AS subjectName
		from
			J_SUBJECT J,
			U_PROFESSOR U,
			E_ENROLLMENT E
		where
			U.U_PROF_ID = J.J_SUB_PROF	
		and
			E.E_J_SUBJECT_NO = J.J_NO
</select>

<!-- 강의 평가 등록 테이블 여부 업데이트 -->
<update id="updateLectureRatingRegisterEnrollTable" parameterType="int">
update 
	E_ENROLLMENT
set
	E_LECTURE_RATING = 'y'
where
	E_J_SUBJECT_NO = #{subjectNo}	

</update>
<!-- 강의 평가 테이블 상세 조회 -->
<select id="getInformationProfessor" parameterType="string" resultType="kr.co.jhta.vo.ProfessorOpenLecture">
	select distinct
			U.U_PROF_NO 			AS no,
			U.U_PROF_ID 			AS id,
			U.U_PROF_NAME 			AS name,
			U.U_PROF_GENDER 		AS gender,
			U.U_PROF_CODE 			AS code,
			U.U_PROF_DIVISION 		AS division,
			U.U_PROF_PWD 			AS pwd,
			E.E_LECTURE_RATING 	    AS register,
			U.U_PROF_PHONE 			AS phone,
			U.U_PROF_ADDR 			AS addr,
			U.U_PROF_EMAIL 			AS email,
			U.U_PROF_GRADE 			AS grade,
			U.U_PROF_SSN 			AS ssn,
			U.U_PROF_FOREI 			AS forei,
			U.U_PROF_ENTRYDATE 		AS entrydate,
			U.U_PROF_LEAVEDATE 		AS leavedate,
			J.J_NO					AS subjectNo,
			J.J_SUBJECT_NAME    	AS subjectName
		from
			J_SUBJECT J,
			U_PROFESSOR U,
			E_ENROLLMENT E
		where
			U.U_PROF_ID = J.J_SUB_PROF	
		and
			E.E_J_SUBJECT_NO = J.J_NO
		and	
	  		U.U_PROF_ID = #{id}		
</select>

<!-- 강의 정보 등록하기 -->
<insert id="addInvestgation" parameterType="kr.co.jhta.vo.InvestGationAttribute">
	insert into L_OPENLECTUREREGISTER(
		L_ASSESSMENTNUMBER,
		L_INVESTIGATING_CONTENTS,
		L_PROFESSOR_ID,
		L_SUBJECTCODE,
		L_REGISTER
	)
	values(
		investgation_seq.nextval,
		#{contents},
		#{professorId},
		#{subjectNo},
		#{register}
		)
</insert>

<!-- 강의 평가 조회 테이블 전체 조회 -->
<select id="subjectRatingInquiriesAll" resultType="kr.co.jhta.vo.ProfessorSubject">
select distinct
		U.U_PROF_ID				    AS subjectProfeesorId,
		U.U_PROF_NAME		     	AS subjectPorfessor,
		J.J_IS_PASSED				AS subjectPassd,
		J.J_SUBJECT_NAME			AS subjectName,
		J.J_T_CODE					AS subjectCode,
		J.J_NO						AS subjectNo,
		E.E_LECTURE_RATING			AS register
		from
			J_SUBJECT J,
			U_PROFESSOR U,
			E_ENROLLMENT E
		where
			U.U_PROF_ID = J.J_SUB_PROF
		and 
			J.J_NO = E.E_J_SUBJECT_NO
</select>

<!-- 테이블 조회 -->
<select id="subjectInquiries" parameterType="string" resultType="kr.co.jhta.vo.ProfessorSubject">
		select distinct
		U.U_PROF_ID				    AS subjectProfeesorId,
		U.U_PROF_NAME		     	AS subjectPorfessor,
		J.J_IS_PASSED				AS subjectPassd,
		J.J_SUBJECT_NAME			AS subjectName,
		J.J_T_CODE					AS subjectCode,
		J.J_NO						AS subjectNo,
		E.E_LECTURE_RATING			AS register
		from
			J_SUBJECT J,
			U_PROFESSOR U,
			E_ENROLLMENT E
		where
			U.U_PROF_ID = J.J_SUB_PROF
		and 
			J.J_NO = E_J_SUBJECT_NO	
		and
	   		U.U_PROF_ID = #{subjectProfeesorId}	 	
</select>

<!-- 강의 평가서 조회 -->
<select id="getLecturEevaluationSheet" parameterType="int" resultType="kr.co.jhta.vo.LectureEvaluationSheet">
		select 
			J.J_SUB_PROF					AS professorId,
			J.J_NO							AS subjectNo,
			L.L_INVESTIGATING_CONTENTS 	 	AS contents,
			L_REGISTER  					AS register
		
		from
			J_SUBJECT J,
			U_PROFESSOR U,
			L_OPENLECTUREREGISTER L
		where
			U.U_PROF_ID = J.J_SUB_PROF
		and 
			J.J_NO = L.L_SUBJECTCODE	
		and
		   	J.J_NO = #{subjectNo}    	
</select>
<!-- 강의 평가 삭제 -->
<delete id="professorSubjectdelete" parameterType="int">
	delete from 
		L_OPENLECTUREREGISTER
	where
		L_SUBJECTCODE = #{subjectNo}
</delete>

<!-- 강의 평가 조사항목 가져오기 -->
<select id="getInvestListDeatil" parameterType="int" resultType="kr.co.jhta.vo.LectureEvaluationSheet">
		select 
			L.L_PROFESSOR_ID				AS professorId,
			E.E_J_SUBJECT_NO				AS subjectNo,
			L.L_INVESTIGATING_CONTENTS 	 	AS contents,
			E.E_LECTURE_RATING  			AS register
		
		from
			L_OPENLECTUREREGISTER L,
			E_ENROLLMENT E
		where
			E.E_J_SUBJECT_NO = L.L_SUBJECTCODE
		and
		   	E.E_J_SUBJECT_NO = #{subjectNo}
</select>
<!-- 강의 평가 조사항목 확인 -->	
<select id="getInvestListRegister" parameterType="int" resultType="kr.co.jhta.vo.LectureEvaluationSheet">
		select 
			E_J_SUBJECT_NO				AS subjectNo,
			E_LECTURE_RATING  			AS register
		
		from
			E_ENROLLMENT E
		where
		   	E_J_SUBJECT_NO = #{subjectNo}
</select>

<!-- 강의 평가 점수 등록 -->
<insert id="insertLectureRating" parameterType="kr.co.jhta.vo.LectureRatingSave">
insert into L_LECTURERATINGSCORE(
	L_RATINGNUMBER,
	L_RATINGSCORE_NO,
	L_STUDENT_ID,
	L_RATINGSCORE
	)
values(#{investSubject}, #{scoreNo}, #{studentId}, #{ratingScore})	
</insert>

<!-- 강의 개설 db 업데이트(강의 평가 점수 관련) -->
<update id="updateLectureRatingRegister" parameterType="kr.co.jhta.vo.LectureRatingSave">
update 
	S_SCORE
set
	S_TEST = 'Y'
where
	S_SCORE_NO = #{scoreNo}		
</update>
</mapper>